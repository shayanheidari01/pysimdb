name: Publish Python Package to PyPI

on:
  push:
    branches: [ main ]
  release:
    types: [published]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for versioning
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine setuptools-scm
    
    - name: Get version from git tag or commit
      id: get_version
      run: |
        # Try to get version from git tag first
        TAG_NAME=${GITHUB_REF#refs/tags/}
        if [[ $TAG_NAME != refs/heads/* ]]; then
          VERSION=${TAG_NAME#v}
        else
          # Use commit hash for development versions
          VERSION="0.0.0.dev+${GITHUB_SHA::8}"
        fi
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "Using version: $VERSION"
    
    - name: Update version in setup.py
      run: |
        # Update version in setup.py
        sed -i "s/version=\"[^\"]*\"/version=\"$VERSION\"/g" setup.py
    
    - name: Build package
      run: |
        python -m build
    
    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}